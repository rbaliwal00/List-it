{"version":3,"sources":["postings/components/HousingForm.js","shared/util/validators.js","postings/hooks/form-hook.js","shared/UIElements/FormInput.js"],"names":["HousingForm","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","privateroom","setPrivateRoom","privatebath","setPrivateBath","housingtype","setHousingType","laundry","setLaundry","parking","setParking","useForm","title","value","isValid","city","pincode","description","formemail","phone","contactname","extension","street","crossstreet","cityy","address","rent","sqft","availableon","formState","inputHandler","history","useHistory","useParams","location","categoryType","form","postSubmitHandler","event","a","preventDefault","formData","FormData","append","inputs","userId","process","Authorization","token","push","Fragment","onClear","style","textAlign","className","onSubmit","marginRight","asOverlay","id","element","type","label","size","color","bordercolor","validators","VALIDATOR_REQUIRE","onInput","errorText","marginBottom","rows","VALIDATOR_MINLENGTH","margin","placeholder","fluid","selection","options","key","text","onChange","marginTop","onClick","disabled","val","VALIDATOR_EMAIL","validate","undefined","length","validator","trim","test","formReducer","state","action","formIsValid","inputId","initialInputs","initialFormValidity","useReducer","dispatch","useCallback","inputData","formValidity","inputReducer","isTouched","FormInput","props","initialValue","initialValid","inputState","useEffect","res","changeHandler","target","checked","console","log","touchHandler","borderColor","onBlur","cols"],"mappings":"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","file":"static/js/9.35a92562.chunk.js","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport MainHeader from '../../shared/Components/MainHeader';\r\nimport FormInput from '../../shared/UIElements/FormInput';\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from '../../shared/util/validators';\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport { useForm } from '../hooks/form-hook';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ImageUpload from '../../shared/UIElements/ImageUpload';\r\nimport ErrorModal from '../../shared/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/UIElements/LoadingSpinner';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\nimport './JobForm.css';\r\n\r\nconst HousingForm = () => {\r\n    const auth = useContext(AuthContext);\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const [privateroom, setPrivateRoom] = useState('-');\r\n    const [privatebath, setPrivateBath] = useState('-');\r\n    const [housingtype, setHousingType] = useState('-');\r\n    const [laundry, setLaundry] = useState('-');\r\n    const [parking, setParking] = useState('-');\r\n\r\n    const privateRoom = [\r\n        {\r\n            key: '-',\r\n            text: '-',\r\n            value: '-'\r\n        },\r\n        {\r\n            key: 'not-private-room',\r\n            text: 'room not private',\r\n            value: 'room not private'\r\n        },\r\n        {\r\n            key: 'private-room',\r\n            text: 'private room',\r\n            value: 'private room',\r\n        },\r\n    ]\r\n\r\n    const privateBath = [\r\n        {\r\n            key: '-',\r\n            text: '-',\r\n            value: '-'\r\n        },\r\n        {\r\n            key: 'not-private-bath',\r\n            text: 'no private bath',\r\n            value: 'no private bath'\r\n        },\r\n        {\r\n            key: 'private-bath',\r\n            text: 'private bath',\r\n            value: 'private bath',\r\n        },\r\n    ]\r\n\r\n    const housingType = [\r\n        {\r\n            key: '-',\r\n            text: '-',\r\n            value: '-'\r\n        },\r\n        {\r\n            key: 'apartment',\r\n            text: 'apartment',\r\n            value: 'apartment'\r\n        },\r\n        {\r\n            key: 'condo',\r\n            text: 'condo',\r\n            value: 'condo',\r\n        },\r\n        {\r\n            key: 'cottage/cabin',\r\n            text: 'cottage/cabin',\r\n            value: 'cottage/cabin',\r\n        },\r\n        {\r\n            key: 'duplex',\r\n            text: 'duplex',\r\n            value: 'duplex',\r\n        },\r\n        {\r\n            key: 'flat',\r\n            text: 'flat',\r\n            value: 'flat',\r\n        },\r\n        {\r\n            key: 'house',\r\n            text: 'house',\r\n            value: 'house',\r\n        },\r\n        {\r\n            key: 'in-law',\r\n            text: 'in-law',\r\n            value: 'in-law',\r\n        },\r\n        {\r\n            key: 'loft',\r\n            text: 'loft',\r\n            value: 'loft',\r\n        },\r\n        {\r\n            key: 'townhouse',\r\n            text: 'townhouse',\r\n            value: 'townhouse',\r\n        },\r\n        {\r\n            key: 'manufactured',\r\n            text: 'manufactured',\r\n            value: 'manufactured',\r\n        },\r\n        {\r\n            key: 'assisted living',\r\n            text: 'assisted living',\r\n            value: 'assisted living',\r\n        },\r\n        {\r\n            key: 'land',\r\n            text: 'land',\r\n            value: 'land',\r\n        },\r\n    ]\r\n\r\n    const laundryopt = [\r\n        {\r\n            key: '-',\r\n            text: '-',\r\n            value: '-'\r\n        },\r\n        {\r\n            key: 'w/d unit',\r\n            text: 'w/d unit',\r\n            value: 'w/d unit'\r\n        },\r\n        {\r\n            key: 'w/d hookups',\r\n            text: 'w/d hookups',\r\n            value: 'w/d hookups',\r\n        },\r\n        {\r\n            key: 'laundry in bldg',\r\n            text: 'laundry in bldg',\r\n            value: 'laundry in bldg',\r\n        },\r\n        {\r\n            key: 'laundry on site',\r\n            text: 'laundry on site',\r\n            value: 'laundry on site',\r\n        },\r\n        {\r\n            key: 'no laundry on site',\r\n            text: 'no laundry on site',\r\n            value: 'no laundry on site',\r\n        },\r\n    ]\r\n\r\n    const parkingopt = [\r\n        {\r\n            key: '-',\r\n            text: '-',\r\n            value: '-'\r\n        },\r\n        {\r\n            key: 'carport',\r\n            text: 'carport',\r\n            value: 'carport'\r\n        },\r\n        {\r\n            key: 'attached garage',\r\n            text: 'attached garage',\r\n            value: 'attached garage',\r\n        },\r\n        {\r\n            key: 'detached garage',\r\n            text: 'detached garage',\r\n            value: 'detached garage',\r\n        },\r\n        {\r\n            key: 'off-street parking',\r\n            text: 'off-street parking',\r\n            value: 'off-street parking',\r\n        },\r\n        {\r\n            key: 'street parking',\r\n            text: 'street parking',\r\n            value: 'street parking',\r\n        },\r\n        {\r\n            key: 'valet parking',\r\n            text: 'valet parking',\r\n            value: 'valet parking',\r\n        },\r\n        {\r\n            key: 'no parking',\r\n            text: 'no parking',\r\n            value: 'no parking',\r\n        }\r\n    ]\r\n\r\n\r\n    const [formState, inputHandler] = useForm(\r\n        {\r\n            title: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            city: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            pincode: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            formemail: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            phone: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            contactname: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            extension: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            street: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            crossstreet: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            cityy: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            address: {\r\n                value: '',\r\n                isValid: true\r\n            },\r\n            rent: {\r\n                value: '',\r\n                isValid: true\r\n            },\r\n            sqft: {\r\n                value: '',\r\n                isValid: true\r\n            },\r\n            availableon: {\r\n                value: '',\r\n                isValid: true\r\n            }\r\n        }, false);\r\n\r\n    let history = useHistory();\r\n    const { location, categoryType, form } = useParams();\r\n\r\n    const postSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('title', formState.inputs.title.value);\r\n            formData.append('city', formState.inputs.city.value);\r\n            formData.append('pincode', formState.inputs.pincode.value);\r\n            formData.append('description', formState.inputs.description.value);\r\n            formData.append('formemail', formState.inputs.formemail.value);\r\n            formData.append('phone', formState.inputs.phone.value);\r\n            formData.append('extension', formState.inputs.extension.value);\r\n            formData.append('contactname', formState.inputs.contactname.value);\r\n            formData.append('street', formState.inputs.street.value);\r\n            formData.append('crossstreet', formState.inputs.crossstreet.value);\r\n            formData.append('cityy', formState.inputs.cityy.value);\r\n            formData.append('rent', formState.inputs.rent.value);\r\n            formData.append('sqft', formState.inputs.sqft.value);\r\n            formData.append('privateroom', privateroom);\r\n            formData.append('privatebath', privatebath);\r\n            formData.append('housingtype', housingtype);\r\n            formData.append('laundry', laundry);\r\n            formData.append('parking', parking);\r\n            formData.append('availableon', formState.inputs.availableon.value);\r\n            formData.append('address', `${formState.inputs.street.value}${formState.inputs.city.value}${formState.inputs.pincode.value}`);\r\n            formData.append('creator', auth.userId);\r\n            formData.append('postcity', `${location}`);\r\n            formData.append('posttype', `${categoryType}`);\r\n            formData.append('postform', `${form}`);\r\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + '/posts',\r\n                'POST',\r\n                formData,\r\n                { Authorization: 'Bearer ' + auth.token }\r\n            );\r\n            history.push(`/${location}/${categoryType}/${form}/editimage`);\r\n        } catch (err) {\r\n        }\r\n    };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <MainHeader style={{ textAlign: 'left' }}>\r\n                India > {location} > {categoryType} > {form}\r\n            </MainHeader>\r\n            <div className=\"job-form\">\r\n                <main>\r\n                    <form onSubmit={postSubmitHandler} style={{ marginRight: '10px' }}>\r\n                        {isLoading && <LoadingSpinner asOverlay />}\r\n                        <div className=\"center first\">\r\n                            <FormInput\r\n                                id=\"title\"\r\n                                element=\"input\"\r\n                                type=\"text\"\r\n                                label=\"posting title\"\r\n                                size=\"40\"\r\n                                color=\"black\"\r\n                                bordercolor=\"black\"\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                onInput={inputHandler}\r\n                                errorText=\"Please enter a valid title\"\r\n                            ></FormInput>\r\n                            <FormInput\r\n                                id=\"city\"\r\n                                element=\"input\"\r\n                                type=\"text\"\r\n                                label=\"city or neighbourhood\"\r\n                                size=\"40\"\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                onInput={inputHandler}\r\n                                errorText=\"Please enter a valid city or neighbourhood\"\r\n                            ></FormInput>\r\n                            <FormInput\r\n                                id=\"pincode\"\r\n                                element=\"input\"\r\n                                type=\"text\"\r\n                                label=\"pin code\"\r\n                                size=\"20\"\r\n                                color=\"black\"\r\n                                bordercolor=\"black\"\r\n                                validators={[VALIDATOR_REQUIRE()]}\r\n                                onInput={inputHandler}\r\n                                errorText=\"Please enter a valid pincode\"\r\n                            ></FormInput></div>\r\n                        <div style={{ marginBottom: '200px' }}>\r\n                            <FormInput\r\n                                id=\"description\"\r\n                                rows=\"10\"\r\n                                type=\"textarea\"\r\n                                label=\"description\"\r\n                                size=\"120\"\r\n                                color=\"green\"\r\n                                bordercolor=\"green\"\r\n                                validators={[VALIDATOR_REQUIRE(), VALIDATOR_MINLENGTH(6)]}\r\n                                onInput={inputHandler}\r\n                                errorText=\"Please enter a valid description\"></FormInput>\r\n                        </div>\r\n                        <div className=\"row\" style={{ margin: '0px -10px 10px 0' }} className=\"col-12\">\r\n                            <fieldset >\r\n                                <legend style={{ textAlign: 'left' }}>posting details</legend>\r\n                                <div className=\"row\">\r\n                                <div className=\"col-lg-3\" >\r\n                                        <div style={{marginRight: \"10px\"}}>\r\n                                        <FormInput\r\n                                            id=\"rent\"\r\n                                            element=\"input\"\r\n                                            type=\"number\"\r\n                                            label=\"rent(in rupees)\"\r\n                                            placeholder=\"rent\"\r\n                                        size=\"70\"\r\n                                        validators={[VALIDATOR_REQUIRE()]}\r\n                                        onInput={inputHandler}\r\n                                            errorText=\"Please enter a valid rent\" />\r\n                                    </div>\r\n                                        <div style={{ marginRight: \"10px\" }}>\r\n                                        <FormInput\r\n                                            id=\"sqft\"\r\n                                            element=\"input\"\r\n                                            type=\"number\"\r\n                                            label=\"sqft\"\r\n                                            placeholder=\"sqft\"\r\n                                            size=\"70\"\r\n                                            validators={[VALIDATOR_REQUIRE()]}\r\n                                            onInput={inputHandler}\r\n                                            errorText=\"Please enter a valid sqft\" />\r\n                                    </div>\r\n                                </div>\r\n                                    <div className=\"col-lg-4\" >\r\n                                        <label style={{margin: '0'}}>private room</label>\r\n                                        <Dropdown\r\n                                        placeholder='-'\r\n                                        fluid\r\n                                        selection\r\n                                        options={privateRoom}\r\n                                        onChange={(event, { value }) => {\r\n                                            setPrivateRoom(value);\r\n                                            }} />\r\n                                        <label style={{ margin: '0' }}>private bath</label>\r\n                                        <Dropdown\r\n                                            placeholder='-'\r\n                                            fluid\r\n                                            selection\r\n                                            options={privateBath}\r\n                                            onChange={(event, { value }) => {\r\n                                                setPrivateBath(value);\r\n                                            }} />\r\n                                        <label style={{ margin: '0' }}>housing type</label>\r\n                                        <Dropdown\r\n                                            placeholder='-'\r\n                                            fluid\r\n                                            selection\r\n                                            options={housingType}\r\n                                            onChange={(event, { value }) => {\r\n                                                setHousingType(value);\r\n                                            }} />\r\n                                        <label style={{ margin: '0' }}>laundry</label>\r\n                                        <Dropdown\r\n                                            placeholder='-'\r\n                                            fluid\r\n                                            selection\r\n                                            options={laundryopt}\r\n                                            onChange={(event, { value }) => {\r\n                                                setLaundry(value);\r\n                                            }} />\r\n                                        <label style={{ margin: '0' }}>parking</label>\r\n                                        <Dropdown\r\n                                            placeholder='-'\r\n                                            fluid\r\n                                            selection\r\n                                            options={parkingopt}\r\n                                            onChange={(event, { value }) => {\r\n                                                setParking(value);\r\n                                            }} />\r\n                                    </div>\r\n                                    <div className=\"col-lg-5\" >\r\n                                        <FormInput\r\n                                            id=\"availableon\"\r\n                                            element=\"input\"\r\n                                            type=\"date\"\r\n                                            label=\"avialable on\"\r\n                                            size=\"70\"\r\n                                            validators={() => { }}\r\n                                            onInput={inputHandler}/>\r\n                                    </div>\r\n                                    </div>\r\n                            </fieldset>\r\n                        </div>\r\n                        <div className=\"row\" style={{ margin: '0px 10px' }}>\r\n                            <fieldset >\r\n                                <legend style={{ textAlign: 'left' }}>contact info</legend>\r\n                                <div className=\"row\" style={{ marginRight: '10px' }}>\r\n                                    <div className=\"col-md-5\" >\r\n                                        <FormInput\r\n                                            id=\"formemail\"\r\n                                            element=\"input\"\r\n                                            type=\"text\"\r\n                                            label=\"email\"\r\n                                            placeholder=\"Your email address\"\r\n                                            size=\"70\"\r\n                                            validators={[VALIDATOR_REQUIRE()]}\r\n                                            onInput={inputHandler}\r\n                                            errorText=\"Please enter a valid email address\" />\r\n                                    </div>\r\n                                    <div className=\"col-md-5\">\r\n                                        <fieldset>\r\n                                            <legend style={{ textAlign: 'left' }}>phone/ text</legend>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-7\">\r\n                                                    <FormInput\r\n                                                        id=\"phone\"\r\n                                                        element=\"input\"\r\n                                                        type=\"text\"\r\n                                                        label=\"phone number\"\r\n                                                        size=\"50\"\r\n                                                        validators={[VALIDATOR_REQUIRE()]}\r\n                                                        onInput={inputHandler}\r\n                                                        errorText=\"Please enter a valid phone number\" />\r\n                                                    <FormInput\r\n                                                        id=\"contactname\"\r\n                                                        element=\"input\"\r\n                                                        type=\"text\"\r\n                                                        label=\"contact name\"\r\n                                                        size=\"50\"\r\n                                                        validators={[VALIDATOR_REQUIRE()]}\r\n                                                        onInput={inputHandler}\r\n                                                        errorText=\"Please enter a valid contact name\"></FormInput>\r\n                                                </div>\r\n                                                <div className=\"col-md-5 col-sm-3 col-xs-3\">\r\n                                                    <FormInput\r\n                                                        id=\"extension\"\r\n                                                        element=\"input\"\r\n                                                        type=\"text\"\r\n                                                        label=\"extension\"\r\n                                                        size=\"50\"\r\n                                                        validators={[VALIDATOR_REQUIRE()]}\r\n                                                        onInput={inputHandler}\r\n                                                        errorText=\"Please enter a valid extension\"></FormInput>\r\n                                                </div>\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                        <fieldset style={{ marginTop: '10px' }}>\r\n                            <legend style={{ textAlign: 'left' }}>location info</legend>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-4\">\r\n                                    <FormInput\r\n                                        id=\"street\"\r\n                                        element=\"input\"\r\n                                        type=\"text\"\r\n                                        label=\"street\"\r\n                                        size=\"50\"\r\n                                        validators={[VALIDATOR_REQUIRE()]}\r\n                                        onInput={inputHandler}\r\n                                        errorText=\"Please enter a valid street\"></FormInput>\r\n                                </div>\r\n                                <div className=\"col-md-4\">\r\n                                    <FormInput\r\n                                        id=\"crossstreet\"\r\n                                        element=\"input\"\r\n                                        type=\"text\"\r\n                                        label=\"cross street\"\r\n                                        size=\"50\"\r\n                                        validators={[VALIDATOR_REQUIRE()]}\r\n                                        onInput={inputHandler}\r\n                                        errorText=\"Please enter a valid cross street\"></FormInput>\r\n                                </div>\r\n                                <div className=\"col-md-3\">\r\n                                    <FormInput\r\n                                        id=\"cityy\"\r\n                                        element=\"input\"\r\n                                        type=\"text\"\r\n                                        label=\"city\"\r\n                                        size=\"50\"\r\n                                        validators={[VALIDATOR_REQUIRE()]}\r\n                                        onInput={inputHandler}\r\n                                        errorText=\"Please enter a valid city\"></FormInput>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                        <div className=\"center\">\r\n                            <button\r\n                                type=\"submit\"\r\n                                onClick={postSubmitHandler}\r\n                                disabled={!formState.isValid}\r\n                            >continue</button>\r\n                        </div>\r\n                    </form>\r\n                </main>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default HousingForm;","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n    let isValid = true;\n    if (validators === null || validators === undefined || validators.length === 0) {\n        return true;\r\n    }\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};\r\n\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../util/validators';\r\nimport './FormInput.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'CHANGED':\r\n            return {\r\n                ...state,\r\n                value: action.val\r\n            };\r\n        case 'TOUCH':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst FormInput = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer,\r\n        {\r\n            value: props.initialValue || '',\r\n            isValid: props.initialValid || false,\r\n            isTouched: false\r\n        });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event => {\r\n        if (props.type === \"checkbox\") {\r\n            if (event.target.checked === true) {\r\n                console.log({ [event.target.id]: event.target.checked });\r\n            }\r\n            else {\r\n                console.log({ [event.target.id]: event.target.value });\r\n            }\r\n            dispatch({ type: 'CHANGED', val: event.target.checked });\r\n        }\r\n        dispatch({ type: 'CHANGE', val: event.target.value, validators: props.validators });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    };\r\n\r\n    const element = props.element === \"input\" ?\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            size={props.size}\r\n            style={{ borderColor: props.bordercolor}}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value} /> :\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            cols={props.size}\r\n            style={{ borderColor: props.bordercolor }}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value} />\r\n    let res;\r\n    if (props.type === \"checkbox\" || props.type === \"radio\") {\r\n        res = (<div className={`form-control checkbox ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}\r\n            style={props.style} >\r\n            {element}\r\n            <label >{props.label}</label>\r\n        </div>)\r\n    } else {\r\n        res = (<div className={`form-control form-group ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`} style={{ margin: '10px' }} >\r\n            <label style={{ color: props.color}\r\n            }> {props.label}</label >\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n            {res}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default FormInput;\r\n"],"sourceRoot":""}