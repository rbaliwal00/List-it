{"version":3,"sources":["postings/pages/Posting.js"],"names":["Posting","useState","loadedPost","setLoadedPost","useHttpClient","isLoading","error","sendRequest","clearError","postId","useParams","useEffect","a","process","responseData","post","fetchPosts","Fragment","onClear","className","key","id","title","description","city","compensation","rent","sqft","privateroom","privatebath","housingtype","laundry","parking","availableon","makemanufacturer","modelnamenumber","sizedimensions","condition","employmentType","employment","position","formemail","creatorId","creator","type","posttype","form","postform","images","coordinates","location"],"mappings":"wMA4DeA,UApDC,WAAO,IAAD,EACkBC,qBADlB,mBACXC,EADW,KACCC,EADD,OAEoCC,cAA9CC,EAFU,EAEVA,UAAWC,EAFD,EAECA,MAAOC,EAFR,EAEQA,YAAaC,EAFrB,EAEqBA,WAEjCC,EAASC,cAAYD,OAY3B,OAVAE,qBAAU,YACU,uCAAG,4BAAAC,EAAA,+EAEgBL,EAAYM,yCAAA,iBAA8CJ,IAF1E,OAELK,EAFK,OAGXX,EAAcW,EAAaC,MAHhB,uGAAH,qDAMhBC,KACD,CAACT,EAAaE,IAGb,kBAAC,IAAMQ,SAAP,KACI,kBAAC,IAAD,CAAYX,MAAOA,EAAOY,QAASV,IAClCH,GAAa,yBAAKc,UAAU,UACzB,kBAAC,IAAD,QAEFd,GAAaH,GAAc,kBAAC,IAAD,CAAakB,IAAKlB,EAAWmB,GACtDA,GAAInB,EAAWmB,GACfC,MAAOpB,EAAWoB,MAClBC,YAAarB,EAAWqB,YACxBC,KAAMtB,EAAWsB,KACjBC,aAAcvB,EAAWuB,aACzBC,KAAMxB,EAAWwB,KACjBC,KAAMzB,EAAWyB,KACjBC,YAAa1B,EAAW0B,YACxBC,YAAa3B,EAAW2B,YACxBC,YAAa5B,EAAW4B,YACxBC,QAAS7B,EAAW6B,QACpBC,QAAS9B,EAAW8B,QACpBC,YAAa/B,EAAW+B,YACxBC,iBAAkBhC,EAAWgC,iBAC7BC,gBAAiBjC,EAAWiC,gBAC5BC,eAAgBlC,EAAWkC,eAC3BC,UAAWnC,EAAWmC,UACtBC,eAAgBpC,EAAWqC,WAC3BC,SAAUtC,EAAWsC,SACrBC,UAAWvC,EAAWuC,UACtBC,UAAWxC,EAAWyC,QACtBC,KAAM1C,EAAW2C,SACjBC,KAAM5C,EAAW6C,SACjBC,OAAQ9C,EAAW8C,OACnBC,YAAa/C,EAAWgD","file":"static/js/28.db04c635.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport PostingItem from '../components/PostingItem';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\nimport ErrorModal from '../../shared/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/UIElements/LoadingSpinner';\r\n\r\nconst Posting = () => {\r\n    const [loadedPost, setLoadedPost] = useState();\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n    const postId = useParams().postId;\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            try {\r\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/posts/${postId}`);\r\n                setLoadedPost(responseData.post);\r\n            } catch (err) { }\r\n        };\r\n        fetchPosts();\r\n    }, [sendRequest, postId]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            {isLoading && <div className=\"center\">\r\n                <LoadingSpinner />\r\n            </div>}\r\n            {!isLoading && loadedPost && <PostingItem key={loadedPost.id}\r\n                id={loadedPost.id}\r\n                title={loadedPost.title}\r\n                description={loadedPost.description}\r\n                city={loadedPost.city}\r\n                compensation={loadedPost.compensation}\r\n                rent={loadedPost.rent}\r\n                sqft={loadedPost.sqft}\r\n                privateroom={loadedPost.privateroom}\r\n                privatebath={loadedPost.privatebath}\r\n                housingtype={loadedPost.housingtype}\r\n                laundry={loadedPost.laundry}\r\n                parking={loadedPost.parking}\r\n                availableon={loadedPost.availableon}\r\n                makemanufacturer={loadedPost.makemanufacturer}\r\n                modelnamenumber={loadedPost.modelnamenumber}\r\n                sizedimensions={loadedPost.sizedimensions}\r\n                condition={loadedPost.condition}\r\n                employmentType={loadedPost.employment}\r\n                position={loadedPost.position}\r\n                formemail={loadedPost.formemail}\r\n                creatorId={loadedPost.creator}\r\n                type={loadedPost.posttype}\r\n                form={loadedPost.postform}\r\n                images={loadedPost.images}\r\n                coordinates={loadedPost.location}/>}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Posting;"],"sourceRoot":""}