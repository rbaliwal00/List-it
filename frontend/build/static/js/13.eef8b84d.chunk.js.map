{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","postings/components/EditImage.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","postings/hooks/form-hook.js"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","EditImage","props","auth","useContext","AuthContext","useState","preview","setPreview","fileobj","files","setFiles","useHttpClient","isLoading","error","sendRequest","clearError","filePickerRef","useRef","useParams","location","categoryType","form","history","useHistory","useEffect","addImagesHandler","event","a","preventDefault","length","push","formData","FormData","i","append","process","responseData","post","_id","Authorization","token","Fragment","ErrorModal","onClear","MainHeader","onSubmit","LoadingSpinner","asOverlay","type","name","id","multiple","onChange","reader","target","FileReader","readAsDataURL","onload","result","Set","ref","style","display","className","onClick","current","click","map","url","index","src","alt","key","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","formReducer","state","action","formIsValid","inputId","inputs","isValid","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","useCallback","inputData","formValidity"],"mappings":"oLAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,yFI4G/EC,UAtGG,SAAAC,GACd,IAAMC,EAAOC,qBAAWC,KADD,EAEOC,mBAAS,IAFhB,mBAEhBC,EAFgB,KAEPC,EAFO,KAGjBC,EAAU,GAHO,EAIGH,qBAJH,mBAIhBI,EAJgB,KAITC,EAJS,OAKKL,qBALL,gCAM+BM,eAA9CC,EANe,EAMfA,UAAWC,EANI,EAMJA,MAAOC,EANH,EAMGA,YAAaC,EANhB,EAMgBA,WACjCC,EAAgBC,mBAPC,EAakBC,cAAjCC,EAbe,EAafA,SAAUC,EAbK,EAaLA,aAAcC,EAbT,EAaSA,KAC5BC,EAAUC,cAEdC,qBAAU,cAEP,CAACV,IAEJ,IAiBMW,EAAgB,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,sDAQjB,IAPJD,EAAME,iBADe,SAIbnB,EAAMoB,QAAU,GAChBP,EAAQQ,KAAR,WAAiBX,EAAjB,YAA6BC,EAA7B,YAA6CC,EAA7C,aAEEU,EAAW,IAAIC,SACZC,EAAI,EAAGA,EAAIxB,EAAMoB,OAAQI,IAC9BF,EAASG,OAAO,SAAUzB,EAAMwB,IATnB,gBAWUnB,EAAYqB,yDAXtB,cAWXC,EAXW,iBAaXtB,EAAYqB,yCAAA,iBAA8CC,EAAaC,KAAKC,IAAhE,WACd,OACAP,EACA,CAAEQ,cAAe,UAAYrC,EAAKsC,QAhBrB,QAkBjBlB,EAAQQ,KAAR,KAlBiB,oHAAH,sDAwBtB,OACI,kBAAC,IAAMW,SAAP,KACI,kBAACC,EAAA,EAAD,CAAY7B,MAAOA,EAAO8B,QAAS5B,IACnC,kBAAC6B,EAAA,EAAD,KACI,6BACI,sCAAYzB,EAAZ,MAAyBC,EAAzB,MAA0CC,KAGlD,8BACI,0BAAMwB,SAAUpB,GACXb,GAAa,kBAACkC,EAAA,EAAD,CAAgBC,WAAS,IACvC,2BACIC,KAAK,OACDC,KAAK,OACLC,GAAG,SACPC,UAAQ,EACRC,SAzDG,SAAA1B,GACnB,IAGI2B,EAHA5C,EAAQiB,EAAM4B,OAAO7C,MACzBD,EAAQsB,KAAKrB,GACbC,EAASgB,EAAM4B,OAAO7C,OAGtB,IAAK,IAAIwB,EAAI,EAAGA,EAAIzB,EAAQ,GAAGqB,OAAQI,KACnCoB,EAAS,IAAIE,YACNC,cAAchD,EAAQ,GAAGyB,IAChCoB,EAAOI,OAAS,SAAA/B,GACZpB,EAAQwB,KAAKJ,EAAM4B,OAAOI,QAE1BnD,EAAW,EAAI,IAAIoD,IAAIrD,OA8CfsD,IAAK5C,EACL6C,MAAO,CAAEC,QAAS,UACtB,yBAAKC,UAAU,mBACX,yEAEJ,yBAAKA,UAAU,oBACX,4BAAQC,QA3EH,WACrBhD,EAAciD,QAAQC,UA0EN,eAEJ,yBAAKH,UAAU,iBACX,8BACMzD,GAAW,IAAI6D,KAAI,SAACC,EAAKC,GAAN,OACjB,yBAAKC,IAAKF,EAAKG,IAAI,SAASrB,GAAG,QAAQsB,IAAKH,SAIxD,yBAAKN,UAAU,oBACX,4BAAQf,KAAK,SAASgB,QAASvC,GAA/B,0B,gCCzGT,SAASgD,EAAgBC,EAAKF,EAAKG,GAYhD,OAXIH,KAAOE,EACT9E,OAAOgF,eAAeF,EAAKF,EAAK,CAC9BG,MAAOA,EACPE,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZL,EAAIF,GAAOG,EAGND,EAZT,mC,gCCAA,8CAEA,SAASM,EAAQC,EAAQC,GACvB,IAAIC,EAAOvF,OAAOuF,KAAKF,GAEvB,GAAIrF,OAAOwF,sBAAuB,CAChC,IAAIC,EAAUzF,OAAOwF,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAO3F,OAAO4F,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKrD,KAAK2D,MAAMN,EAAME,GAGxB,OAAOF,EAGM,SAASO,EAAepC,GACrC,IAAK,IAAIrB,EAAI,EAAGA,EAAI0D,UAAU9D,OAAQI,IAAK,CACzC,IAAI2D,EAAyB,MAAhBD,UAAU1D,GAAa0D,UAAU1D,GAAK,GAE/CA,EAAI,EACN+C,EAAQpF,OAAOgG,IAAS,GAAMC,SAAQ,SAAUrB,GAC9C,YAAelB,EAAQkB,EAAKoB,EAAOpB,OAE5B5E,OAAOkG,0BAChBlG,OAAOmG,iBAAiBzC,EAAQ1D,OAAOkG,0BAA0BF,IAEjEZ,EAAQpF,OAAOgG,IAASC,SAAQ,SAAUrB,GACxC5E,OAAOgF,eAAetB,EAAQkB,EAAK5E,OAAO4F,yBAAyBI,EAAQpB,OAKjF,OAAOlB,I,oGC/BH0C,EAAc,SAACC,EAAOC,GACxB,OAAQA,EAAOlD,MACX,IAAK,eACD,IAAImD,GAAc,EAClB,IAAK,IAAMC,KAAWH,EAAMI,OAEpBF,EADAC,IAAYF,EAAOE,QACLD,GAAeD,EAAOI,QAEtBH,GAAeF,EAAMI,OAAOD,GAASE,QAG3D,OAAO,2BACAL,GADP,IAEII,OAAO,2BACAJ,EAAMI,QADP,kBAEDH,EAAOE,QAAU,CAAEzB,MAAOuB,EAAOvB,MAAO2B,QAASJ,EAAOI,WAE7DA,QAASH,IAEjB,IAAK,WACD,MAAO,CACHE,OAAQH,EAAOG,OACfC,QAASJ,EAAOC,aAExB,QACI,OAAOF,IAINM,EAAU,SAACC,EAAeC,GAAyB,IAAD,EAC7BC,qBAAWV,EAAa,CAClDK,OAAQG,EACRF,QAASG,IAH8C,mBACpDE,EADoD,KACzCC,EADyC,KAuB3D,MAAO,CAACD,EAjBaE,uBAAY,SAAC3D,EAAIyB,EAAO2B,GACzCM,EAAS,CACL5D,KAAM,eACN2B,MAAOA,EACP2B,QAASA,EACTF,QAASlD,MAEd,IAEiB2D,uBAAY,SAACC,EAAWC,GACxCH,EAAS,CACL5D,KAAM,WACNqD,OAAQS,EACRX,YAAaY,MAElB","file":"static/js/13.eef8b84d.chunk.js","sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React, { useState, useRef, useEffect, useContext } from 'react';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport { useHttpClient } from '../hooks/http-hook';\r\n\r\nimport ErrorModal from '../../shared/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/UIElements/LoadingSpinner';\r\nimport MainHeader from '../../shared/Components/MainHeader';\r\nimport { useForm } from '../hooks/form-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './EditImage.css';\r\n\r\nconst EditImage = props => {\r\n    const auth = useContext(AuthContext);\r\n    const [preview, setPreview] = useState([]);\r\n    const fileobj = [];\r\n    const [files, setFiles] = useState();\r\n    const [postId, setPostId] = useState(); \r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const filePickerRef = useRef();\r\n\r\n    const pickImageHandler = () => {\r\n        filePickerRef.current.click();\r\n    }\r\n\r\n    const { location, categoryType, form } = useParams();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n        \r\n    }, [sendRequest]);\r\n\r\n    const changedHandler = event => {\r\n        let files = event.target.files;\r\n        fileobj.push(files);\r\n        setFiles(event.target.files);\r\n        let reader;\r\n\r\n        for (var i = 0; i < fileobj[0].length; i++) {\r\n            reader = new FileReader();\r\n            reader.readAsDataURL(fileobj[0][i]);\r\n            reader.onload = event => {\r\n                preview.push(event.target.result);   // update the array instead of replacing the entire value of preview\r\n                \r\n                setPreview([...new Set(preview)]); // spread into a new array to trigger rerender\r\n            }\r\n        }\r\n    }\r\n\r\n    const addImagesHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        try {\r\n            if (files.length <= 0) {\r\n                history.push(`/${location}/${categoryType}/${form}/preview`);   \r\n            }\r\n            const formData = new FormData();\r\n            for (let i = 0; i < files.length; i++) {\r\n                formData.append('images', files[i]);\r\n            }\r\n            const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/posts/lastpost`);\r\n\r\n            await sendRequest(process.env.REACT_APP_BACKEND_URL + `/posts/${responseData.post._id}/images`,\r\n                'POST',\r\n                formData,\r\n                { Authorization: 'Bearer ' + auth.token }\r\n            ); \r\n            history.push(`/`);   \r\n        } catch (err) {\r\n        };\r\n        \r\n    }; \r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <MainHeader>\r\n                <nav>\r\n                    <p>India > {location} > {categoryType} > {form}</p>\r\n                </nav>\r\n            </MainHeader>\r\n            <main>\r\n                <form onSubmit={addImagesHandler}>\r\n                    {isLoading && <LoadingSpinner asOverlay />}  \r\n                    <input\r\n                        type=\"file\"\r\n                            name=\"file\"\r\n                            id=\"images\"\r\n                        multiple\r\n                        onChange={changedHandler}\r\n                        ref={filePickerRef}\r\n                        style={{ display: 'none' }} />\r\n                    <div className=\"first-container\">\r\n                        <p>this posting has 0 images, of a maximum 6</p>\r\n                    </div>\r\n                    <div className=\"second-container\">\r\n                        <button onClick={pickImageHandler}>Add Images</button>\r\n                    </div>\r\n                    <div className=\"multi-preview\">\r\n                        <div >\r\n                            {(preview || []).map((url, index) => (\r\n                                <img src={url} alt=\"images\" id=\"image\" key={index} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"button-container\">\r\n                        <button type=\"submit\" onClick={addImagesHandler}>done with images</button>\r\n                    </div>\r\n                </form>\r\n            </main>\r\n        </React.Fragment>\r\n        )\r\n};\r\n\r\nexport default EditImage;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};\r\n\r\n"],"sourceRoot":""}