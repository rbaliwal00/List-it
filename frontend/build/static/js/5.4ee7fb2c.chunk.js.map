{"version":3,"sources":["user/pages/Signup.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","postings/hooks/form-hook.js","shared/UIElements/FormInput.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["User","useHttpClient","isLoading","error","sendRequest","clearError","auth","useContext","AuthContext","useForm","name","value","isValid","email","password","formState","inputHandler","history","useHistory","authSubmitHandler","event","a","preventDefault","console","log","inputs","formData","FormData","append","process","responseData","login","userId","token","push","Fragment","onClear","asOverlay","style","border","textAlign","background","height","paddingTop","borderRadius","to","color","className","marginTop","backgroundColor","width","margin","onSubmit","type","label","element","id","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","marginBottom","disabled","onClick","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","val","validate","undefined","length","validator","trim","test","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","formReducer","state","action","formIsValid","inputId","initialInputs","initialFormValidity","useReducer","dispatch","useCallback","inputData","formValidity","inputReducer","isTouched","FormInput","props","initialValue","initialValid","inputState","useEffect","res","changeHandler","checked","touchHandler","placeholder","size","borderColor","bordercolor","onChange","onBlur","rows","cols","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/5.4ee7fb2c.chunk.js","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useHistory, NavLink } from 'react-router-dom';\r\n\r\nimport FormInput from '../../shared/UIElements/FormInput';\r\nimport { VALIDATOR_EMAIL, VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/util/validators';\r\nimport { useForm } from '../../postings/hooks/form-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/UIElements/LoadingSpinner';\r\nimport { useHttpClient } from '../../postings/hooks/http-hook'; \r\nimport ImageUpload from '../../shared/UIElements/ImageUpload';\r\nimport './User.css';\r\n\r\nconst User = () => {\r\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n    const auth = useContext(AuthContext);\r\n    const [formState, inputHandler] = useForm({\r\n        name: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        email: {\r\n            value: '',\r\n            isValid: false\r\n        },\r\n        password: {\r\n            value: '',\r\n            isValid: false\r\n        }\r\n    }, false);\r\n\r\n    let history = useHistory();\r\n\r\n    const switchModeHandler = () => {\r\n        history.push(`/auth`);\r\n    };\r\n\r\n    const authSubmitHandler = async event => {\r\n        event.preventDefault();\r\n\r\n        console.log(formState.inputs);\r\n        try {\r\n            const formData = new FormData();\r\n            formData.append('name', formState.inputs.name.value);\r\n            formData.append('email', formState.inputs.email.value);\r\n            formData.append('password', formState.inputs.password.value);\r\n            const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL  + '/users/signup',\r\n                'POST',\r\n                formData\r\n            );\r\n            auth.login(responseData.userId, responseData.token);\r\n            history.push(`/`);\r\n        } catch (error) {\r\n        }\r\n        \r\n    };\r\n    console.log(formState.inputs);\r\n    return (\r\n        <React.Fragment>\r\n            <ErrorModal error={error} onClear={clearError} />\r\n            <div>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n                <div style={{\r\n                    border: '1px solid gray',\r\n                    textAlign: 'center',\r\n                    background: 'lightgray',\r\n                    height: '60px',\r\n                    paddingTop: '10px',\r\n                    borderRadius: '5px'\r\n                }}>\r\n                    <h1>\r\n                        <NavLink to=\"/\"\r\n                            style={{\r\n                                color: 'gray'\r\n                            }}>ListIt  <sup>in</sup></NavLink>\r\n                    </h1>\r\n                </div>\r\n            <main className=\"job-form\" style={{ marginTop: '30px' }}>\r\n                <h2 className=\"center\"\r\n                    style={{\r\n                        backgroundColor: 'lightgrey',\r\n                        width: '250px',\r\n                        height: '50px',\r\n                        margin: 'auto',\r\n                        color: 'black',\r\n                        borderRadius: '3px'\r\n                    }}>Create a new account</h2>\r\n                <hr />\r\n                    <form onSubmit={authSubmitHandler}>\r\n                    <FormInput\r\n                        type=\"name\"\r\n                        label=\"Your Name\"\r\n                        element=\"input\"\r\n                        id=\"name\"\r\n                        validators={[VALIDATOR_REQUIRE()]}\r\n                        errorText=\"Please enter a valid name\"\r\n                        onInput={inputHandler}\r\n                        />\r\n                    <FormInput\r\n                        type=\"email\"\r\n                        label=\"E-Mail\"\r\n                        element=\"input\"\r\n                        id=\"email\"\r\n                        validators={[VALIDATOR_EMAIL()]}\r\n                        errorText=\"Please enter a valid email address\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <FormInput\r\n                        type=\"password\"\r\n                        label=\"Password\"\r\n                        element=\"input\"\r\n                        id=\"password\"\r\n                        validators={[VALIDATOR_MINLENGTH(6)]}\r\n                        errorText=\"Please enter a valid password (at least 6 characters)\"\r\n                        onInput={inputHandler}\r\n                    />\r\n                    <div className=\"center\" style={{ marginBottom: '30px' }}>\r\n                    <button\r\n                        type=\"submit\"\r\n                        disabled={!formState.isValid}\r\n                        className=\"\">SIGNUP</button>\r\n                    </div>\r\n                </form>\r\n                <p className=\"center\">Already have an account. Login instead!</p>\r\n                <div className=\"center\">\r\n                    <button onClick={switchModeHandler}>LOGIN</button>\r\n                </div>\r\n            </main>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default User;","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n    let isValid = true;\n    if (validators === null || validators === undefined || validators.length === 0) {\n        return true;\r\n    }\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'INPUT_CHANGE':\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                } else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        case 'SET_DATA':\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formReducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n\r\n    const inputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({\r\n            type: 'INPUT_CHANGE',\r\n            value: value,\r\n            isValid: isValid,\r\n            inputId: id\r\n        });\r\n    }, []);\r\n\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        })\r\n    }, []);\r\n\r\n    return [formState, inputHandler, setFormData];\r\n};\r\n\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../util/validators';\r\nimport './FormInput.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'CHANGE':\r\n            return {\r\n                ...state,\r\n                value: action.val,\r\n                isValid: validate(action.val, action.validators)\r\n            };\r\n        case 'CHANGED':\r\n            return {\r\n                ...state,\r\n                value: action.val\r\n            };\r\n        case 'TOUCH':\r\n            return {\r\n                ...state,\r\n                isTouched: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst FormInput = props => {\r\n    const [inputState, dispatch] = useReducer(inputReducer,\r\n        {\r\n            value: props.initialValue || '',\r\n            isValid: props.initialValid || false,\r\n            isTouched: false\r\n        });\r\n\r\n    const { id, onInput } = props;\r\n    const { value, isValid } = inputState;\r\n\r\n    useEffect(() => {\r\n        onInput(id, value, isValid)\r\n    }, [id, value, isValid, onInput]);\r\n\r\n    const changeHandler = event => {\r\n        if (props.type === \"checkbox\") {\r\n            if (event.target.checked === true) {\r\n                console.log({ [event.target.id]: event.target.checked });\r\n            }\r\n            else {\r\n                console.log({ [event.target.id]: event.target.value });\r\n            }\r\n            dispatch({ type: 'CHANGED', val: event.target.checked });\r\n        }\r\n        dispatch({ type: 'CHANGE', val: event.target.value, validators: props.validators });\r\n    };\r\n\r\n    const touchHandler = () => {\r\n        dispatch({\r\n            type: 'TOUCH'\r\n        })\r\n    };\r\n\r\n    const element = props.element === \"input\" ?\r\n        <input\r\n            id={props.id}\r\n            type={props.type}\r\n            placeholder={props.placeholder}\r\n            size={props.size}\r\n            style={{ borderColor: props.bordercolor}}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value} /> :\r\n        <textarea\r\n            id={props.id}\r\n            rows={props.rows || 3}\r\n            cols={props.size}\r\n            style={{ borderColor: props.bordercolor }}\r\n            onChange={changeHandler}\r\n            onBlur={touchHandler}\r\n            value={inputState.value} />\r\n    let res;\r\n    if (props.type === \"checkbox\" || props.type === \"radio\") {\r\n        res = (<div className={`form-control checkbox ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}\r\n            style={props.style} >\r\n            {element}\r\n            <label >{props.label}</label>\r\n        </div>)\r\n    } else {\r\n        res = (<div className={`form-control form-group ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`} style={{ margin: '10px' }} >\r\n            <label style={{ color: props.color}\r\n            }> {props.label}</label >\r\n            {element}\r\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n        </div>)\r\n    }\r\n\r\n    return (\r\n    <div>\r\n            {res}\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default FormInput;\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}